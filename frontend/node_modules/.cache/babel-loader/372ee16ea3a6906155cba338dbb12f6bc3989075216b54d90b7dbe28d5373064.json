{"ast":null,"code":"// HomePage.js\nimport'./App.css';import CatNavbar from'../components/catNavbar';import DevContent from'../components/devContent';import{Box,Card,Typography}from'@mui/material';import TopNavbar from'../components/topNavbar';import axios from'axios';import{useEffect,useMemo,useState}from'react';import{useNavigate}from'react-router-dom';import DevContentModal from'../components/devContentModal';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function HomePage(){const[contents,setContents]=useState([]);const[loading,setLoading]=useState(true);const[selectedPost,setSelectedPost]=useState(null);const[currentUser,setCurrentUser]=useState({id:null,role:null});const[token,setToken]=useState(null);const[selectedTab,setSelectedTab]=useState(0);const[refreshTrigger,setRefreshTrigger]=useState(0);const navigate=useNavigate();const updatePostInList=updatedPost=>{setContents(prev=>prev.map(post=>Number(post.post_id)===Number(updatedPost.post_id)?{...post,...updatedPost}:post));};const handleTabChange=(_,newValue)=>{setSelectedTab(newValue);};const filteredContents=useMemo(()=>{if(selectedTab===0){return contents.filter(item=>item.post_type==='Official');}else if(selectedTab===1){return contents;// Already filtered by backend\n}else{return contents.filter(item=>item.post_type==='Unofficial');}},[contents,selectedTab]);const today=new Date().toLocaleDateString('en-GB',{day:'2-digit',month:'long',year:'numeric'});// ✅ Set token once and redirect if missing\nuseEffect(()=>{const storedToken=localStorage.getItem(\"token\");if(!storedToken){navigate(\"/\");}else{setToken(storedToken);}},[navigate]);useEffect(()=>{if(!token)return;const fetchContents=async()=>{try{const endpoint=selectedTab===1?'http://localhost:5000/following-resources-posts':'http://localhost:5000/post';const response=await axios.get(endpoint,{headers:{Authorization:`Bearer ${token}`}});setContents(response.data);}catch(err){console.error('❌ Failed to fetch contents',err);}finally{setLoading(false);}};fetchContents();},[token,selectedTab,refreshTrigger]);// ✅ Fetch user after token is ready\nuseEffect(()=>{const fetchUser=async()=>{const token=localStorage.getItem(\"token\");if(!token)return;try{const response=await axios.get(\"http://localhost:5000/get-profile-info\",{headers:{Authorization:`Bearer ${token}`}});console.log(\"✅ profile data:\",response.data);setCurrentUser({id:response.data.id,role:response.data.role});}catch(err){console.error(\"❌ Failed to fetch user\",err);}};fetchUser();},[]);// ✅ Fetch post contents after token is ready\nuseEffect(()=>{if(!token)return;const fetchContents=async()=>{try{const response=await axios.get('http://localhost:5000/post',{headers:{Authorization:`Bearer ${token}`}});setContents(response.data);}catch(err){console.error('❌ Failed to fetch contents',err);}finally{setLoading(false);}};fetchContents();},[token]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TopNavbar,{}),/*#__PURE__*/_jsx(Typography,{sx:{position:'fixed',left:'20px',top:'50%',transform:'translateY(-50%)',color:'white',fontWeight:600,fontSize:30},children:\"HOMEPAGE\"}),/*#__PURE__*/_jsx(Typography,{sx:{position:'fixed',right:'20px',top:'50%',transform:'translateY(-50%)',color:'white',fontWeight:600,fontSize:30},children:today}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center',width:'100%'},children:/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',width:'100%'},children:/*#__PURE__*/_jsxs(Card,{sx:{backgroundColor:'#181818',padding:'20px',width:'55%',minHeight:'100vh',display:'flex',flexDirection:'column',overflowY:'auto'},children:[/*#__PURE__*/_jsx(CatNavbar,{value:selectedTab,onChange:handleTabChange}),loading?/*#__PURE__*/_jsx(Typography,{color:\"white\",sx:{textAlign:'center',marginTop:'50px'},children:\"Loading...\"}):contents.length===0?/*#__PURE__*/_jsx(Typography,{color:\"white\",sx:{textAlign:'center',marginTop:'50px'},children:\"No content available.\"}):filteredContents.map(item=>/*#__PURE__*/_jsx(DevContent,{onClick:openForum=>{setSelectedPost({...item,openForum});},postId:item.post_id,favouriteCounter:item.post_like_count,bookmarkCounter:item.post_bookmark_count,isLiked:item.is_liked,isBookmarked:item.is_bookmarked,resource_name:item.resource_title,title:item.post_title,category:item.post_type,content:item.post_content,username:item.author_username,currentUserId:currentUser.id,currentUserRole:currentUser.role,commentCounter:item.post_comment,postImage:item.post_graphic?item.post_graphic.startsWith(\"http\")?item.post_graphic:`http://localhost:5000/uploads/${item.post_graphic}`:null,resource_color:item.resource_color,resource_version:item.resource_version,postAuthorId:item.post_author,resource_tag:item.resource_tag_name,postDate:item.post_created_at,resource_desc:item.resource_desc,post_desc:item.post_desc},`${item.post_id}-${refreshTrigger}`)),selectedPost&&/*#__PURE__*/_jsx(DevContentModal,{post:selectedPost,onClose:async()=>{try{const response=await axios.get('http://localhost:5000/post',{headers:{Authorization:`Bearer ${token}`}});const freshData=response.data;setContents([]);setTimeout(()=>{setContents(freshData);setRefreshTrigger(prev=>prev+1);},50);setSelectedPost(null);}catch(err){console.error('Failed to refresh after modal close',err);setSelectedPost(null);}},onPostDelete:deletedId=>setContents(prev=>prev.filter(post=>post.post_id!==deletedId)),openForumInitially:selectedPost.openForum,favouriteCounter:selectedPost.post_like_count,bookmarkCounter:selectedPost.post_bookmark_count,commentCounter:selectedPost.post_comment,isLiked:selectedPost.is_liked,isBookmarked:selectedPost.is_bookmarked,onPostUpdate:updatePostInList})]})})})]});}export default HomePage;","map":{"version":3,"names":["CatNavbar","DevContent","Box","Card","Typography","TopNavbar","axios","useEffect","useMemo","useState","useNavigate","DevContentModal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","HomePage","contents","setContents","loading","setLoading","selectedPost","setSelectedPost","currentUser","setCurrentUser","id","role","token","setToken","selectedTab","setSelectedTab","refreshTrigger","setRefreshTrigger","navigate","updatePostInList","updatedPost","prev","map","post","Number","post_id","handleTabChange","_","newValue","filteredContents","filter","item","post_type","today","Date","toLocaleDateString","day","month","year","storedToken","localStorage","getItem","fetchContents","endpoint","response","get","headers","Authorization","data","err","console","error","fetchUser","log","children","sx","position","left","top","transform","color","fontWeight","fontSize","right","display","flexDirection","alignItems","width","justifyContent","backgroundColor","padding","minHeight","overflowY","value","onChange","textAlign","marginTop","length","onClick","openForum","postId","favouriteCounter","post_like_count","bookmarkCounter","post_bookmark_count","isLiked","is_liked","isBookmarked","is_bookmarked","resource_name","resource_title","title","post_title","category","content","post_content","username","author_username","currentUserId","currentUserRole","commentCounter","post_comment","postImage","post_graphic","startsWith","resource_color","resource_version","postAuthorId","post_author","resource_tag","resource_tag_name","postDate","post_created_at","resource_desc","post_desc","onClose","freshData","setTimeout","onPostDelete","deletedId","openForumInitially","onPostUpdate"],"sources":["C:/Users/AIRISZ/devcenter/frontend/src/pages/HomePage.js"],"sourcesContent":["// HomePage.js\r\nimport './App.css';\r\nimport CatNavbar from '../components/catNavbar';\r\nimport DevContent from '../components/devContent';\r\nimport { Box, Card, Typography } from '@mui/material';\r\nimport TopNavbar from '../components/topNavbar';\r\nimport axios from 'axios';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport DevContentModal from '../components/devContentModal';\r\n\r\nfunction HomePage() {\r\n    const [contents, setContents] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedPost, setSelectedPost] = useState(null);\r\n    const [currentUser, setCurrentUser] = useState({ id: null, role: null });\r\n    const [token, setToken] = useState(null);\r\n    const [selectedTab, setSelectedTab] = useState(0);\r\n    const [refreshTrigger, setRefreshTrigger] = useState(0);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const updatePostInList = (updatedPost) => {\r\n        setContents(prev =>\r\n            prev.map(post =>\r\n                Number(post.post_id) === Number(updatedPost.post_id) ? { ...post, ...updatedPost } : post\r\n            )\r\n        );\r\n    };\r\n\r\n    const handleTabChange = (_, newValue) => {\r\n        setSelectedTab(newValue);\r\n    };\r\n\r\n    const filteredContents = useMemo(() => {\r\n        if (selectedTab === 0) {\r\n            return contents.filter(item => item.post_type === 'Official');\r\n        } else if (selectedTab === 1) {\r\n            return contents; // Already filtered by backend\r\n        } else {\r\n            return contents.filter(item => item.post_type === 'Unofficial');\r\n        }\r\n    }, [contents, selectedTab]);\r\n\r\n\r\n    const today = new Date().toLocaleDateString('en-GB', {\r\n        day: '2-digit',\r\n        month: 'long',\r\n        year: 'numeric',\r\n    });\r\n\r\n    // ✅ Set token once and redirect if missing\r\n    useEffect(() => {\r\n        const storedToken = localStorage.getItem(\"token\");\r\n        if (!storedToken) {\r\n            navigate(\"/\");\r\n        } else {\r\n            setToken(storedToken);\r\n        }\r\n    }, [navigate]);\r\n\r\n    useEffect(() => {\r\n    if (!token) return;\r\n\r\n    const fetchContents = async () => {\r\n        try {\r\n            const endpoint =\r\n                selectedTab === 1\r\n                    ? 'http://localhost:5000/following-resources-posts'\r\n                    : 'http://localhost:5000/post';\r\n\r\n            const response = await axios.get(endpoint, {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n\r\n            setContents(response.data);\r\n        } catch (err) {\r\n            console.error('❌ Failed to fetch contents', err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    fetchContents();\r\n}, [token, selectedTab, refreshTrigger]);\r\n\r\n\r\n    // ✅ Fetch user after token is ready\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            const token = localStorage.getItem(\"token\");\r\n            if (!token) return;\r\n\r\n            try {\r\n                const response = await axios.get(\"http://localhost:5000/get-profile-info\", {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                });\r\n                console.log(\"✅ profile data:\", response.data);\r\n                setCurrentUser({ id: response.data.id, role: response.data.role });\r\n            } catch (err) {\r\n                console.error(\"❌ Failed to fetch user\", err);\r\n            }\r\n        };\r\n\r\n        fetchUser();\r\n    }, []);\r\n\r\n    // ✅ Fetch post contents after token is ready\r\n    useEffect(() => {\r\n        if (!token) return;\r\n\r\n        const fetchContents = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/post', {\r\n                    headers: { Authorization: `Bearer ${token}` },\r\n                });\r\n                setContents(response.data);\r\n            } catch (err) {\r\n                console.error('❌ Failed to fetch contents', err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchContents();\r\n    }, [token]);\r\n\r\n    return (\r\n        <>\r\n            <TopNavbar />\r\n            <Typography\r\n                sx={{\r\n                    position: 'fixed',\r\n                    left: '20px',\r\n                    top: '50%',\r\n                    transform: 'translateY(-50%)',\r\n                    color: 'white',\r\n                    fontWeight: 600,\r\n                    fontSize: 30,\r\n                }}\r\n            >\r\n                HOMEPAGE\r\n            </Typography>\r\n\r\n            <Typography\r\n                sx={{\r\n                    position: 'fixed',\r\n                    right: '20px',\r\n                    top: '50%',\r\n                    transform: 'translateY(-50%)',\r\n                    color: 'white',\r\n                    fontWeight: 600,\r\n                    fontSize: 30,\r\n                }}\r\n            >\r\n                {today}\r\n            </Typography>\r\n\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    width: '100%',\r\n                }}\r\n            >\r\n                <Box sx={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\r\n                    <Card\r\n                        sx={{\r\n                            backgroundColor: '#181818',\r\n                            padding: '20px',\r\n                            width: '55%',\r\n                            minHeight: '100vh',\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            overflowY: 'auto',\r\n                        }}\r\n                    >\r\n                        <CatNavbar value={selectedTab} onChange={handleTabChange} />\r\n\r\n                        {loading ? (\r\n                            <Typography color=\"white\" sx={{ textAlign: 'center', marginTop: '50px' }}>\r\n                                Loading...\r\n                            </Typography>\r\n                        ) : contents.length === 0 ? (\r\n                            <Typography color=\"white\" sx={{ textAlign: 'center', marginTop: '50px' }}>\r\n                                No content available.\r\n                            </Typography>\r\n                        ) : (\r\n                            filteredContents.map((item) => (\r\n                                <DevContent\r\n                                    onClick={(openForum) => {\r\n                                        setSelectedPost({ ...item, openForum });\r\n                                    }}\r\n                                    key={`${item.post_id}-${refreshTrigger}`}\r\n                                    postId={item.post_id}\r\n                                    favouriteCounter={item.post_like_count}\r\n                                    bookmarkCounter={item.post_bookmark_count}\r\n                                    isLiked={item.is_liked}\r\n                                    isBookmarked={item.is_bookmarked}\r\n                                    resource_name={item.resource_title}\r\n                                    title={item.post_title}\r\n                                    category={item.post_type}\r\n                                    content={item.post_content}\r\n                                    username={item.author_username}\r\n                                    currentUserId={currentUser.id}\r\n                                    currentUserRole={currentUser.role}\r\n                                    commentCounter={item.post_comment}\r\n                                    postImage={\r\n                                        item.post_graphic\r\n                                            ? item.post_graphic.startsWith(\"http\")\r\n                                                ? item.post_graphic\r\n                                                : `http://localhost:5000/uploads/${item.post_graphic}`\r\n                                            : null\r\n                                    }\r\n                                    resource_color={item.resource_color}\r\n                                    resource_version={item.resource_version}\r\n                                    postAuthorId={item.post_author}\r\n                                    resource_tag={item.resource_tag_name}\r\n                                    postDate={item.post_created_at}\r\n                                    resource_desc={item.resource_desc}\r\n                                    post_desc={item.post_desc}\r\n                                />\r\n                            ))\r\n                        )}\r\n                        {selectedPost && (\r\n                            <DevContentModal\r\n                                post={selectedPost}\r\n                                onClose={async () => {\r\n                                    try {\r\n                                        const response = await axios.get('http://localhost:5000/post', {\r\n                                            headers: { Authorization: `Bearer ${token}` },\r\n                                        });\r\n\r\n                                        const freshData = response.data;\r\n\r\n                                        setContents([]);\r\n                                        setTimeout(() => {\r\n                                            setContents(freshData);\r\n                                            setRefreshTrigger(prev => prev + 1);\r\n                                        }, 50);\r\n\r\n                                        setSelectedPost(null);\r\n                                    } catch (err) {\r\n                                        console.error('Failed to refresh after modal close', err);\r\n                                        setSelectedPost(null);\r\n                                    }\r\n                                }}\r\n                                onPostDelete={(deletedId) =>\r\n                                    setContents((prev) => prev.filter((post) => post.post_id !== deletedId))\r\n                                }\r\n                                openForumInitially={selectedPost.openForum}\r\n                                favouriteCounter={selectedPost.post_like_count}\r\n                                bookmarkCounter={selectedPost.post_bookmark_count}\r\n                                commentCounter={selectedPost.post_comment}\r\n                                isLiked={selectedPost.is_liked}\r\n                                isBookmarked={selectedPost.is_bookmarked}\r\n                                onPostUpdate={updatePostInList}\r\n                            />\r\n                        )}\r\n                    </Card>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}