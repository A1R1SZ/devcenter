{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import TopNavbar from\"../components/topNavbar\";import{Box,Card,Typography,Autocomplete,TextField,Stack,Grid}from\"@mui/material\";import{PieChart,Pie,Cell,Tooltip,Legend,ResponsiveContainer,LineChart,CartesianGrid,XAxis,YAxis,Line}from\"recharts\";import{resourceType}from\"../data/generalData\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function AnalyticsPage(){var _feedbackScores$overa;const[selectedResourceType,setResourceType]=useState(null);const[selectedResourceName,setResourceName]=useState(null);const[selectedResourceVersion,setResourceVersion]=useState(null);const[resourceNameOptions,setResourceNameOptions]=useState([]);const[resourceVersionOptions,setResourceVersionOptions]=useState([]);const[resourceColor,setResourceColor]=useState(null);const[followerCount,setFollowerCount]=useState(null);const[monthlyPostData,setMonthlyPostData]=useState([]);const[totalPosts,setTotalPosts]=useState(null);const[bugFixPieData,setBugFixPieData]=useState([]);const[popularTags,setPopularTags]=useState([]);const[feedbackScores,setFeedbackScores]=useState({usefulness:null,recommendation:null,clarity:null});useEffect(()=>{if(selectedResourceType){setResourceName(null);setResourceVersion(null);axios.get(\"http://localhost:5000/documentation/names\",{params:{resourceType:selectedResourceType}}).then(res=>setResourceNameOptions(res.data)).catch(err=>console.error(\"Failed to fetch names:\",err));}},[selectedResourceType]);useEffect(()=>{axios.get(\"http://localhost:5000/api/analytics/posts-per-month\").then(res=>{setMonthlyPostData(res.data);}).catch(err=>{console.error(\"Error fetching posts per month:\",err);setMonthlyPostData([]);});},[]);useEffect(()=>{if(selectedResourceType&&selectedResourceName){setResourceVersion(null);axios.get(\"http://localhost:5000/documentation/versions\",{params:{resourceType:selectedResourceType,resourceName:selectedResourceName}}).then(res=>setResourceVersionOptions(res.data)).catch(err=>console.error(\"Failed to fetch versions:\",err));axios.get(\"http://localhost:5000/color\",{params:{resourceName:selectedResourceName}}).then(res=>{if(res.data.length>0){setResourceColor(res.data[0].resource_color);}else{setResourceColor(\"white\");}}).catch(err=>console.error(\"Failed to fetch color:\",err));}},[selectedResourceName]);useEffect(()=>{if(selectedResourceName&&selectedResourceVersion){const token=localStorage.getItem(\"token\");// Summary\naxios.get(\"http://localhost:5000/api/analytics/summary\",{params:{resourceName:selectedResourceName,resourceVersion:selectedResourceVersion}}).then(res=>{setTotalPosts(res.data.totalPosts);setBugFixPieData(res.data.bugFixData);}).catch(err=>{console.error(\"Failed to fetch analytics summary:\",err);setBugFixPieData([]);});// Tags\naxios.get(\"http://localhost:5000/api/analytics/popular-tags\",{params:{resourceName:selectedResourceName,resourceVersion:selectedResourceVersion}}).then(res=>{setPopularTags(res.data);}).catch(err=>{console.error(\"Failed to fetch popular tags:\",err);setPopularTags([]);});// Feedback\naxios.get(\"http://localhost:5000/api/analytics/feedback\",{headers:{Authorization:`Bearer ${token}`},params:{resourceName:selectedResourceName,resourceVersion:selectedResourceVersion}}).then(res=>{setFeedbackScores(res.data);const values=Object.values(res.data).filter(v=>typeof v==='number');const overallAverage=values.length?(values.reduce((a,b)=>a+b,0)/values.length).toFixed(2):null;setFeedbackScores(prev=>({...prev,overall:overallAverage}));}).catch(err=>{console.error(\"Failed to fetch feedback scores:\",err);setFeedbackScores({usefulness:null,recommendation:null,clarity:null});});// Total posts (again â€“ optional depending if you want to overwrite)\naxios.get(\"http://localhost:5000/api/analytics/total-posts\",{params:{resourceName:selectedResourceName,resourceVersion:selectedResourceVersion}}).then(res=>{setTotalPosts(res.data.totalPosts);}).catch(err=>{console.error(\"Failed to fetch total posts:\",err);setTotalPosts(null);});axios.get(\"http://localhost:5000/api/analytics/follower-count\",{params:{resourceName:selectedResourceName,resourceVersion:selectedResourceVersion}}).then(res=>{setFollowerCount(res.data.followerCount);}).catch(err=>{console.error(\"Failed to fetch follower count:\",err);setFollowerCount(null);});}},[selectedResourceName,selectedResourceVersion]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TopNavbar,{}),/*#__PURE__*/_jsx(Typography,{sx:{position:\"fixed\",left:\"20px\",top:\"50%\",transform:\"translateY(-50%)\",color:\"white\",fontWeight:600,fontSize:30},children:\"ANALYTICS\"}),/*#__PURE__*/_jsx(Box,{sx:{display:\"flex\",justifyContent:\"center\",width:\"80%\",marginLeft:\"20%\",paddingTop:\"20px\",backgroundColor:\"#181818\",minHeight:\"90vh\"},children:/*#__PURE__*/_jsxs(Box,{sx:{width:\"95%\"},children:[/*#__PURE__*/_jsx(Typography,{sx:{color:\"white\",fontWeight:600,fontSize:30},children:\"GENERAL DATA\"}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Card,{sx:{backgroundColor:\"#2A2828\",color:\"white\",padding:\"20px\"},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Monthly Posts by Resource\"}),monthlyPostData.length>0?/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(LineChart,{data:monthlyPostData,margin:{top:10,right:30,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"month\",stroke:\"#fff\"}),/*#__PURE__*/_jsx(YAxis,{stroke:\"#fff\"}),/*#__PURE__*/_jsx(Tooltip,{}),[...new Set(monthlyPostData.map(d=>d.resource_name))].map((name,idx)=>/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:entry=>entry.resource_name===name?entry.post_count:null,name:name,stroke:`hsl(${idx*60%360}, 100%, 60%)`,dot:false,connectNulls:true},name))]})}):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"gray\",children:\"No data available.\"})]})}),/*#__PURE__*/_jsxs(Box,{sx:{display:\"flex\",alignItems:\"center\",mt:2},children:[/*#__PURE__*/_jsx(Typography,{sx:{color:\"white\",fontWeight:600,fontSize:30,marginRight:1},children:\"SPECIFIC DATA\"}),/*#__PURE__*/_jsxs(Typography,{sx:{color:resourceColor||\"white\",fontWeight:600,fontSize:30,mr:2,textTransform:\"uppercase\"},children:[\"(\",selectedResourceName]}),/*#__PURE__*/_jsxs(Typography,{sx:{color:resourceColor||\"white\",fontWeight:600,fontSize:30},children:[selectedResourceVersion,\")\"]})]}),/*#__PURE__*/_jsxs(Stack,{direction:\"row\",spacing:2,sx:{mb:2,mt:1},children:[/*#__PURE__*/_jsx(Autocomplete,{options:resourceType,value:selectedResourceType,onChange:(e,value)=>{setResourceType(value);setResourceName(null);setResourceVersion(null);},renderInput:params=>/*#__PURE__*/_jsx(TextField,{...params,label:\"Resource Type\",variant:\"outlined\",sx:{backgroundColor:\"#393636\",borderRadius:\"5px\",\"& .MuiInputBase-input\":{color:\"white\"},\"& .MuiInputLabel-root\":{color:\"whitesmoke\"},\"& .MuiInputLabel-root.Mui-focused\":{color:\"white\"}}}),sx:{flex:1}}),/*#__PURE__*/_jsx(Autocomplete,{options:resourceNameOptions,value:selectedResourceName,onChange:(event,newValue)=>{setResourceName(newValue);setResourceVersion(null);},disabled:!selectedResourceType,renderInput:params=>/*#__PURE__*/_jsx(TextField,{...params,label:\"Resource Name\",variant:\"outlined\",sx:{backgroundColor:selectedResourceType?\"#393636\":\"#2e2e2e\",borderRadius:\"5px\",\"& .MuiInputBase-input\":{color:\"white\"},\"& .MuiInputLabel-root\":{color:\"whitesmoke\"},\"& .MuiInputLabel-root.Mui-focused\":{color:\"white\"}}}),sx:{flex:1}}),/*#__PURE__*/_jsx(Autocomplete,{options:resourceVersionOptions,value:selectedResourceVersion,onChange:(event,newValue)=>{setResourceVersion(newValue);},disabled:!selectedResourceName,renderInput:params=>/*#__PURE__*/_jsx(TextField,{...params,label:\"Resource Version\",variant:\"outlined\",sx:{backgroundColor:selectedResourceName?\"#393636\":\"#2e2e2e\",borderRadius:\"5px\",\"& .MuiInputBase-input\":{color:\"white\"},\"& .MuiInputLabel-root\":{color:\"whitesmoke\"},\"& .MuiInputLabel-root.Mui-focused\":{color:\"white\"}}}),sx:{flex:1}})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,sx:{mt:1},children:[bugFixPieData.length>0&&/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsxs(Card,{sx:{backgroundColor:\"#2A2828\",color:\"white\",padding:\"20px\"},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Bug vs Fix Distribution\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:bugFixPieData,dataKey:\"count\",nameKey:\"name\",cx:\"50%\",cy:\"50%\",innerRadius:50,outerRadius:80,fill:\"#8884d8\",labelLine:false,children:bugFixPieData.map((entry,index)=>/*#__PURE__*/_jsx(Cell,{fill:entry.name===\"bugs\"?\"#FF4C4C\":\"#4CAF50\"},`cell-${index}`))}),/*#__PURE__*/_jsx(\"text\",{x:\"50%\",y:\"50%\",textAnchor:\"middle\",dominantBaseline:\"middle\",fill:\"#00FF99\",fontSize:18,fontWeight:\"bold\",children:(_bugFixPieData$find=>{const total=bugFixPieData.reduce((sum,d)=>sum+d.count,0);const fixCount=((_bugFixPieData$find=bugFixPieData.find(d=>d.name===\"fixes\"))===null||_bugFixPieData$find===void 0?void 0:_bugFixPieData$find.count)||0;return total>0?`${(fixCount/total*100).toFixed(1)}% Fix`:\"0% Fix\";})()}),/*#__PURE__*/_jsx(Tooltip,{formatter:(value,name)=>[`${value}`,name===\"bugs\"?\"Bugs\":\"Fixes\"]}),/*#__PURE__*/_jsx(Legend,{})]})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsxs(Card,{sx:{backgroundColor:\"#2A2828\",color:\"white\",padding:\"20px\",minHeight:\"200px\"},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,sx:{fontWeight:600},children:\"Trending Tags\"}),popularTags.length>0?/*#__PURE__*/_jsx(Box,{sx:{mt:2},children:popularTags.map((tag,index)=>/*#__PURE__*/_jsxs(Box,{sx:{display:\"flex\",alignItems:\"center\",justifyContent:\"space-between\",backgroundColor:\"#393939\",borderRadius:\"8px\",padding:\"10px 14px\",mb:1},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:\"flex\",alignItems:\"center\"},children:[/*#__PURE__*/_jsxs(Typography,{sx:{fontWeight:700,color:\"#FFD700\",fontSize:\"0.95rem\",mr:1.5},children:[\"#\",index+1]}),/*#__PURE__*/_jsx(Typography,{sx:{fontSize:\"0.95rem\",textTransform:\"capitalize\"},children:tag.resource_tag_name})]}),/*#__PURE__*/_jsxs(Typography,{sx:{backgroundColor:\"#1E88E5\",px:1.5,py:0.5,borderRadius:\"12px\",fontSize:\"0.8rem\",fontWeight:500},children:[tag.usage_count,\" post\",tag.usage_count>1?\"s\":\"\"]})]},index))}):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"gray\",sx:{mt:2},children:\"No data available.\"})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsxs(Card,{sx:{backgroundColor:\"#2A2828\",color:\"white\",padding:\"20px\",minHeight:\"200px\"},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,sx:{fontWeight:600},children:\"Average User Feedback\"}),/*#__PURE__*/_jsx(Box,{sx:{mt:2},children:[\"usefulness\",\"recommendation\",\"clarity\"].map((key,i)=>{var _feedbackScores$key;return/*#__PURE__*/_jsx(Box,{sx:{mb:1.5},children:/*#__PURE__*/_jsxs(Typography,{sx:{fontSize:\"0.95rem\",textTransform:\"capitalize\"},children:[key,\":\",\" \",/*#__PURE__*/_jsxs(Typography,{component:\"span\",sx:{fontWeight:\"bold\",color:\"#00FFC2\"},children:[(_feedbackScores$key=feedbackScores[key])!==null&&_feedbackScores$key!==void 0?_feedbackScores$key:\"-\",\" / 5\"]})]})},i);})}),/*#__PURE__*/_jsxs(Typography,{sx:{fontSize:\"1rem\",fontWeight:600,color:\"#FFD700\",mb:1},children:[\"Overall Average:\",\" \",/*#__PURE__*/_jsxs(Typography,{component:\"span\",sx:{fontWeight:\"bold\",color:\"#00FFC2\"},children:[(_feedbackScores$overa=feedbackScores.overall)!==null&&_feedbackScores$overa!==void 0?_feedbackScores$overa:\"-\",\" / 5\"]})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsxs(Card,{sx:{backgroundColor:\"#2A2828\",color:\"white\",padding:\"20px\"},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Total Content\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:totalPosts!==null&&totalPosts!==void 0?totalPosts:\"-\"})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsxs(Card,{sx:{backgroundColor:\"#2A2828\",color:\"white\",padding:\"20px\"},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Total Followers\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:followerCount!==null&&followerCount!==void 0?followerCount:\"-\"})]})})]})]})})]});}export default AnalyticsPage;","map":{"version":3,"names":["React","useEffect","useState","TopNavbar","Box","Card","Typography","Autocomplete","TextField","Stack","Grid","PieChart","Pie","Cell","Tooltip","Legend","ResponsiveContainer","LineChart","CartesianGrid","XAxis","YAxis","Line","resourceType","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AnalyticsPage","_feedbackScores$overa","selectedResourceType","setResourceType","selectedResourceName","setResourceName","selectedResourceVersion","setResourceVersion","resourceNameOptions","setResourceNameOptions","resourceVersionOptions","setResourceVersionOptions","resourceColor","setResourceColor","followerCount","setFollowerCount","monthlyPostData","setMonthlyPostData","totalPosts","setTotalPosts","bugFixPieData","setBugFixPieData","popularTags","setPopularTags","feedbackScores","setFeedbackScores","usefulness","recommendation","clarity","get","params","then","res","data","catch","err","console","error","resourceName","length","resource_color","token","localStorage","getItem","resourceVersion","bugFixData","headers","Authorization","values","Object","filter","v","overallAverage","reduce","a","b","toFixed","prev","overall","children","sx","position","left","top","transform","color","fontWeight","fontSize","display","justifyContent","width","marginLeft","paddingTop","backgroundColor","minHeight","item","xs","padding","variant","gutterBottom","height","margin","right","bottom","strokeDasharray","dataKey","stroke","Set","map","d","resource_name","name","idx","type","entry","post_count","dot","connectNulls","alignItems","mt","marginRight","mr","textTransform","direction","spacing","mb","options","value","onChange","e","renderInput","label","borderRadius","flex","event","newValue","disabled","container","sm","md","nameKey","cx","cy","innerRadius","outerRadius","fill","labelLine","index","x","y","textAnchor","dominantBaseline","_bugFixPieData$find","total","sum","count","fixCount","find","formatter","tag","resource_tag_name","px","py","usage_count","key","i","_feedbackScores$key","component"],"sources":["C:/Users/AIRISZ/devcenter/frontend/src/pages/AnalyticsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport TopNavbar from \"../components/topNavbar\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  Typography,\r\n  Autocomplete,\r\n  TextField,\r\n  Stack,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  LineChart,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Line,\r\n} from \"recharts\";\r\nimport { resourceType } from \"../data/generalData\";\r\nimport axios from \"axios\";\r\n\r\nfunction AnalyticsPage() {\r\n  const [selectedResourceType, setResourceType] = useState(null);\r\n  const [selectedResourceName, setResourceName] = useState(null);\r\n  const [selectedResourceVersion, setResourceVersion] = useState(null);\r\n\r\n  const [resourceNameOptions, setResourceNameOptions] = useState([]);\r\n  const [resourceVersionOptions, setResourceVersionOptions] = useState([]);\r\n  const [resourceColor, setResourceColor] = useState(null);\r\n  const [followerCount, setFollowerCount] = useState(null);\r\n  const [monthlyPostData, setMonthlyPostData] = useState([]);\r\n\r\n\r\n  const [totalPosts, setTotalPosts] = useState(null);\r\n  const [bugFixPieData, setBugFixPieData] = useState([]);\r\n  const [popularTags, setPopularTags] = useState([]);\r\n  const [feedbackScores, setFeedbackScores] = useState({\r\n    usefulness: null,\r\n    recommendation: null,\r\n    clarity: null,\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    if (selectedResourceType) {\r\n      setResourceName(null);\r\n      setResourceVersion(null);\r\n      axios\r\n        .get(\"http://localhost:5000/documentation/names\", {\r\n          params: { resourceType: selectedResourceType },\r\n        })\r\n        .then((res) => setResourceNameOptions(res.data))\r\n        .catch((err) => console.error(\"Failed to fetch names:\", err));\r\n    }\r\n  }, [selectedResourceType]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:5000/api/analytics/posts-per-month\")\r\n      .then((res) => {\r\n        setMonthlyPostData(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error fetching posts per month:\", err);\r\n        setMonthlyPostData([]);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedResourceType && selectedResourceName) {\r\n      setResourceVersion(null);\r\n      axios\r\n        .get(\"http://localhost:5000/documentation/versions\", {\r\n          params: {\r\n            resourceType: selectedResourceType,\r\n            resourceName: selectedResourceName,\r\n          },\r\n        })\r\n        .then((res) => setResourceVersionOptions(res.data))\r\n        .catch((err) => console.error(\"Failed to fetch versions:\", err));\r\n\r\n      axios\r\n        .get(\"http://localhost:5000/color\", {\r\n          params: {\r\n            resourceName: selectedResourceName,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res.data.length > 0) {\r\n            setResourceColor(res.data[0].resource_color);\r\n          } else {\r\n            setResourceColor(\"white\");\r\n          }\r\n        })\r\n        .catch((err) => console.error(\"Failed to fetch color:\", err));\r\n    }\r\n  }, [selectedResourceName]);\r\n\r\n  useEffect(() => {\r\n  if (selectedResourceName && selectedResourceVersion) {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    // Summary\r\n    axios.get(\"http://localhost:5000/api/analytics/summary\", {\r\n      params: {\r\n        resourceName: selectedResourceName,\r\n        resourceVersion: selectedResourceVersion,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      setTotalPosts(res.data.totalPosts);\r\n      setBugFixPieData(res.data.bugFixData);\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Failed to fetch analytics summary:\", err);\r\n      setBugFixPieData([]);\r\n    });\r\n\r\n    // Tags\r\n    axios.get(\"http://localhost:5000/api/analytics/popular-tags\", {\r\n      params: {\r\n        resourceName: selectedResourceName,\r\n        resourceVersion: selectedResourceVersion,\r\n      }\r\n    })\r\n    .then((res) => {\r\n      setPopularTags(res.data);\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Failed to fetch popular tags:\", err);\r\n      setPopularTags([]);\r\n    });\r\n\r\n    // Feedback\r\n    axios.get(\"http://localhost:5000/api/analytics/feedback\", {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      params: {\r\n        resourceName: selectedResourceName,\r\n        resourceVersion: selectedResourceVersion,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      setFeedbackScores(res.data);\r\n      const values = Object.values(res.data).filter(v => typeof v === 'number');\r\n      const overallAverage = values.length\r\n        ? (values.reduce((a, b) => a + b, 0) / values.length).toFixed(2)\r\n        : null;\r\n      setFeedbackScores(prev => ({ ...prev, overall: overallAverage }));\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Failed to fetch feedback scores:\", err);\r\n      setFeedbackScores({ usefulness: null, recommendation: null, clarity: null });\r\n    });\r\n\r\n    // Total posts (again â€“ optional depending if you want to overwrite)\r\n    axios.get(\"http://localhost:5000/api/analytics/total-posts\", {\r\n      params: {\r\n        resourceName: selectedResourceName,\r\n        resourceVersion: selectedResourceVersion,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      setTotalPosts(res.data.totalPosts);\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Failed to fetch total posts:\", err);\r\n      setTotalPosts(null);\r\n    });\r\n    axios.get(\"http://localhost:5000/api/analytics/follower-count\", {\r\n      params: {\r\n        resourceName: selectedResourceName,\r\n        resourceVersion: selectedResourceVersion,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      setFollowerCount(res.data.followerCount);\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Failed to fetch follower count:\", err);\r\n      setFollowerCount(null);\r\n    });\r\n  }\r\n}, [selectedResourceName, selectedResourceVersion]);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <TopNavbar />\r\n\r\n      {/* Fixed Title */}\r\n      <Typography\r\n        sx={{\r\n          position: \"fixed\",\r\n          left: \"20px\",\r\n          top: \"50%\",\r\n          transform: \"translateY(-50%)\",\r\n          color: \"white\",\r\n          fontWeight: 600,\r\n          fontSize: 30,\r\n        }}\r\n      >\r\n        ANALYTICS\r\n      </Typography>\r\n\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          width: \"80%\",\r\n          marginLeft: \"20%\",\r\n          paddingTop: \"20px\",\r\n          backgroundColor: \"#181818\",\r\n          minHeight: \"90vh\",\r\n        }}\r\n      >\r\n        <Box sx={{ width: \"95%\" }}>\r\n          <Typography sx={{ color: \"white\", fontWeight: 600, fontSize: 30 }}>\r\n            GENERAL DATA\r\n          </Typography>\r\n            <Grid item xs={12}>\r\n              <Card sx={{ backgroundColor: \"#2A2828\", color: \"white\", padding: \"20px\" }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Monthly Posts by Resource\r\n                </Typography>\r\n                {monthlyPostData.length > 0 ? (\r\n                  <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <LineChart data={monthlyPostData} margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\r\n                      <CartesianGrid strokeDasharray=\"3 3\" />\r\n                      <XAxis dataKey=\"month\" stroke=\"#fff\" />\r\n                      <YAxis stroke=\"#fff\" />\r\n                      <Tooltip />\r\n                      {/* Dynamically draw lines for each resource */}\r\n                      {[...new Set(monthlyPostData.map(d => d.resource_name))].map((name, idx) => (\r\n                        <Line\r\n                          key={name}\r\n                          type=\"monotone\"\r\n                          dataKey={(entry) => entry.resource_name === name ? entry.post_count : null}\r\n                          name={name}\r\n                          stroke={`hsl(${(idx * 60) % 360}, 100%, 60%)`}\r\n                          dot={false}\r\n                          connectNulls\r\n                        />\r\n                      ))}\r\n                    </LineChart>\r\n                  </ResponsiveContainer>\r\n                ) : (\r\n                  <Typography variant=\"body2\" color=\"gray\">\r\n                    No data available.\r\n                  </Typography>\r\n                )}\r\n              </Card>\r\n            </Grid>\r\n          <Box sx={{ display: \"flex\", alignItems: \"center\", mt:2}}>\r\n            <Typography\r\n              sx={{\r\n                color: \"white\",\r\n                fontWeight: 600,\r\n                fontSize: 30,\r\n                marginRight: 1,\r\n              }}\r\n            >\r\n              SPECIFIC DATA\r\n            </Typography>\r\n            <Typography\r\n              sx={{\r\n                color: resourceColor || \"white\",\r\n                fontWeight: 600,\r\n                fontSize: 30,\r\n                mr: 2,\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              ({selectedResourceName}\r\n            </Typography>\r\n            <Typography\r\n              sx={{\r\n                color: resourceColor || \"white\",\r\n                fontWeight: 600,\r\n                fontSize: 30,\r\n              }}\r\n            >\r\n              {selectedResourceVersion})\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Stack direction=\"row\" spacing={2} sx={{ mb: 2, mt: 1 }}>\r\n            <Autocomplete\r\n              options={resourceType}\r\n              value={selectedResourceType}\r\n              onChange={(e, value) => {\r\n                setResourceType(value);\r\n                setResourceName(null);\r\n                setResourceVersion(null);\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Resource Type\"\r\n                  variant=\"outlined\"\r\n                  sx={{\r\n                    backgroundColor: \"#393636\",\r\n                    borderRadius: \"5px\",\r\n                    \"& .MuiInputBase-input\": { color: \"white\" },\r\n                    \"& .MuiInputLabel-root\": { color: \"whitesmoke\" },\r\n                    \"& .MuiInputLabel-root.Mui-focused\": { color: \"white\" },\r\n                  }}\r\n                />\r\n              )}\r\n              sx={{ flex: 1 }}\r\n            />\r\n            <Autocomplete\r\n              options={resourceNameOptions}\r\n              value={selectedResourceName}\r\n              onChange={(event, newValue) => {\r\n                setResourceName(newValue);\r\n                setResourceVersion(null);\r\n              }}\r\n              disabled={!selectedResourceType}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Resource Name\"\r\n                  variant=\"outlined\"\r\n                  sx={{\r\n                    backgroundColor: selectedResourceType\r\n                      ? \"#393636\"\r\n                      : \"#2e2e2e\",\r\n                    borderRadius: \"5px\",\r\n                    \"& .MuiInputBase-input\": { color: \"white\" },\r\n                    \"& .MuiInputLabel-root\": { color: \"whitesmoke\" },\r\n                    \"& .MuiInputLabel-root.Mui-focused\": { color: \"white\" },\r\n                  }}\r\n                />\r\n              )}\r\n              sx={{ flex: 1 }}\r\n            />\r\n            <Autocomplete\r\n              options={resourceVersionOptions}\r\n              value={selectedResourceVersion}\r\n              onChange={(event, newValue) => {\r\n                setResourceVersion(newValue);\r\n              }}\r\n              disabled={!selectedResourceName}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Resource Version\"\r\n                  variant=\"outlined\"\r\n                  sx={{\r\n                    backgroundColor: selectedResourceName\r\n                      ? \"#393636\"\r\n                      : \"#2e2e2e\",\r\n                    borderRadius: \"5px\",\r\n                    \"& .MuiInputBase-input\": { color: \"white\" },\r\n                    \"& .MuiInputLabel-root\": { color: \"whitesmoke\" },\r\n                    \"& .MuiInputLabel-root.Mui-focused\": { color: \"white\" },\r\n                  }}\r\n                />\r\n              )}\r\n              sx={{ flex: 1 }}\r\n            />\r\n          </Stack>\r\n\r\n          {/* Modular Data Cards */}\r\n          <Grid container spacing={2} sx={{ mt: 1 }}>\r\n            {/* <Grid item xs={12} sm={6} md={4}>\r\n              <Card\r\n                sx={{\r\n                  backgroundColor: \"#2A2828\",\r\n                  color: \"white\",\r\n                  padding: \"20px\",\r\n                }}\r\n              >\r\n                <Typography variant=\"h6\">Total Content</Typography>\r\n                <Typography variant=\"h4\">{totalPosts ?? \"-\"}</Typography>\r\n              </Card>\r\n            </Grid> */}\r\n\r\n            {bugFixPieData.length > 0 && (\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <Card\r\n                  sx={{\r\n                    backgroundColor: \"#2A2828\",\r\n                    color: \"white\",\r\n                    padding: \"20px\",\r\n                  }}\r\n                >\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Bug vs Fix Distribution\r\n                  </Typography>\r\n                  <ResponsiveContainer width=\"100%\" height={200}>\r\n                    <PieChart>\r\n                      <Pie\r\n                        data={bugFixPieData}\r\n                        dataKey=\"count\"\r\n                        nameKey=\"name\"\r\n                        cx=\"50%\"\r\n                        cy=\"50%\"\r\n                        innerRadius={50}\r\n                        outerRadius={80}\r\n                        fill=\"#8884d8\"\r\n                        labelLine={false}\r\n                      >\r\n                        {bugFixPieData.map((entry, index) => (\r\n                          <Cell\r\n                            key={`cell-${index}`}\r\n                            fill={\r\n                              entry.name === \"bugs\" ? \"#FF4C4C\" : \"#4CAF50\"\r\n                            }\r\n                          />\r\n                        ))}\r\n                      </Pie>\r\n                      <text\r\n                        x=\"50%\"\r\n                        y=\"50%\"\r\n                        textAnchor=\"middle\"\r\n                        dominantBaseline=\"middle\"\r\n                        fill=\"#00FF99\"\r\n                        fontSize={18}\r\n                        fontWeight=\"bold\"\r\n                      >\r\n                        {(() => {\r\n                          const total = bugFixPieData.reduce(\r\n                            (sum, d) => sum + d.count,\r\n                            0\r\n                          );\r\n                          const fixCount =\r\n                            bugFixPieData.find((d) => d.name === \"fixes\")\r\n                              ?.count || 0;\r\n                          return total > 0\r\n                            ? `${((fixCount / total) * 100).toFixed(1)}% Fix`\r\n                            : \"0% Fix\";\r\n                        })()}\r\n                      </text>\r\n                      <Tooltip\r\n                        formatter={(value, name) => [\r\n                          `${value}`,\r\n                          name === \"bugs\" ? \"Bugs\" : \"Fixes\",\r\n                        ]}\r\n                      />\r\n                      <Legend />\r\n                    </PieChart>\r\n                  </ResponsiveContainer>\r\n                </Card>\r\n              </Grid>\r\n            )}\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card\r\n                sx={{\r\n                  backgroundColor: \"#2A2828\",\r\n                  color: \"white\",\r\n                  padding: \"20px\",\r\n                  minHeight: \"200px\",\r\n                }}\r\n              >\r\n                <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 600 }}>\r\n                  Trending Tags\r\n                </Typography>\r\n                {popularTags.length > 0 ? (\r\n                  <Box sx={{ mt: 2 }}>\r\n                    {popularTags.map((tag, index) => (\r\n                      <Box\r\n                        key={index}\r\n                        sx={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"space-between\",\r\n                          backgroundColor: \"#393939\",\r\n                          borderRadius: \"8px\",\r\n                          padding: \"10px 14px\",\r\n                          mb: 1,\r\n                        }}\r\n                      >\r\n                        <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                          <Typography\r\n                            sx={{\r\n                              fontWeight: 700,\r\n                              color: \"#FFD700\",\r\n                              fontSize: \"0.95rem\",\r\n                              mr: 1.5,\r\n                            }}\r\n                          >\r\n                            #{index + 1}\r\n                          </Typography>\r\n                          <Typography\r\n                            sx={{\r\n                              fontSize: \"0.95rem\",\r\n                              textTransform: \"capitalize\",\r\n                            }}\r\n                          >\r\n                            {tag.resource_tag_name}\r\n                          </Typography>\r\n                        </Box>\r\n                        <Typography\r\n                          sx={{\r\n                            backgroundColor: \"#1E88E5\",\r\n                            px: 1.5,\r\n                            py: 0.5,\r\n                            borderRadius: \"12px\",\r\n                            fontSize: \"0.8rem\",\r\n                            fontWeight: 500,\r\n                          }}\r\n                        >\r\n                          {tag.usage_count} post{tag.usage_count > 1 ? \"s\" : \"\"}\r\n                        </Typography>\r\n                      </Box>\r\n                    ))}\r\n                  </Box>\r\n                ) : (\r\n                  <Typography variant=\"body2\" color=\"gray\" sx={{ mt: 2 }}>\r\n                    No data available.\r\n                  </Typography>\r\n                )}\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card\r\n                sx={{\r\n                  backgroundColor: \"#2A2828\",\r\n                  color: \"white\",\r\n                  padding: \"20px\",\r\n                  minHeight: \"200px\",\r\n                  \r\n                }}\r\n              >\r\n              <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 600 }}>\r\n                Average User Feedback\r\n              </Typography>\r\n                <Box sx={{ mt: 2 }}>\r\n                  {[\"usefulness\", \"recommendation\", \"clarity\"].map((key, i) => (\r\n                    <Box key={i} sx={{ mb: 1.5 }}>\r\n                      <Typography sx={{ fontSize: \"0.95rem\", textTransform: \"capitalize\" }}>\r\n                        {key}:{\" \"}\r\n                        <Typography\r\n                          component=\"span\"\r\n                          sx={{\r\n                            fontWeight: \"bold\",\r\n                            color: \"#00FFC2\",\r\n                          }}\r\n                        >\r\n                          {feedbackScores[key] ?? \"-\"} / 5\r\n                        </Typography>\r\n                      </Typography>\r\n                    </Box>\r\n                  ))}\r\n                </Box>\r\n                <Typography sx={{ fontSize: \"1rem\", fontWeight: 600, color: \"#FFD700\", mb: 1 }}>\r\n                  Overall Average:{\" \"}\r\n                  <Typography component=\"span\" sx={{ fontWeight: \"bold\", color: \"#00FFC2\" }}>\r\n                    {feedbackScores.overall ?? \"-\"} / 5\r\n                  </Typography>\r\n                </Typography>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card\r\n                sx={{\r\n                  backgroundColor: \"#2A2828\",\r\n                  color: \"white\",\r\n                  padding: \"20px\",\r\n                }}\r\n              >\r\n                <Typography variant=\"h6\">Total Content</Typography>\r\n                <Typography variant=\"h4\">{totalPosts ?? \"-\"}</Typography>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card\r\n                sx={{\r\n                  backgroundColor: \"#2A2828\",\r\n                  color: \"white\",\r\n                  padding: \"20px\",\r\n                }}\r\n              >\r\n                <Typography variant=\"h6\">Total Followers</Typography>\r\n                <Typography variant=\"h4\">{followerCount ?? \"-\"}</Typography>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AnalyticsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}