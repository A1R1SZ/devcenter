{"ast":null,"code":"import'./App.css';import DevContent from'../components/devContent';import{Avatar,Box,Card,Typography}from'@mui/material';import TopNavbar from'../components/topNavbar';import{useEffect,useState}from'react';import{jwtDecode}from'jwt-decode';import{useParams}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function ProfilePage(){const{userId}=useParams();// dynamic author ID\nconst[username,setUsername]=useState('');const[userPosts,setUserPosts]=useState([]);useEffect(()=>{const token=localStorage.getItem('token');if(userId){// Visiting someone else's profile\nfetch(`http://localhost:5000/get-user-posts/${userId}`,{headers:{Authorization:`Bearer ${token}`}}).then(res=>res.json()).then(data=>{setUsername(data.username||'Unknown');setUserPosts(data.posts||[]);}).catch(err=>console.error('Failed to fetch profile:',err));}else if(token){// Visiting your own profile\ntry{const decoded=jwtDecode(token);setUsername(decoded.username||'User');fetch(`http://localhost:5000/get-user-posts/${decoded.userId}`,{headers:{Authorization:`Bearer ${token}`}}).then(res=>res.json()).then(data=>setUserPosts(data.posts||[])).catch(err=>console.error('Failed to fetch posts:',err));}catch(error){console.error('Error decoding token:',error);}}},[userId]);useEffect(()=>{const token=localStorage.getItem('token');if(token){try{const decoded=jwtDecode(token);setUsername(decoded.username||'User');}catch(error){console.error('Error decoding token:',error);}}},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TopNavbar,{}),/*#__PURE__*/_jsxs(Box,{sx:{position:'fixed',left:'50px',top:'45%',transform:'translateY(-50%)',display:'flex',flexDirection:'column',alignItems:'center'},children:[/*#__PURE__*/_jsx(Avatar,{sx:{width:80,height:80,mb:1},children:\"N\"}),/*#__PURE__*/_jsxs(Typography,{sx:{color:'white',fontWeight:600,fontSize:30},children:[\"@\",username]})]}),/*#__PURE__*/_jsx(Typography,{sx:{position:'fixed',right:'20px',top:'50%',transform:'translateY(-50%)',color:'white',fontWeight:600,fontSize:30},children:\"27 February 2025\"}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center',width:'100%'},children:/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',width:'100%'},children:/*#__PURE__*/_jsx(Card,{sx:{backgroundColor:'#181818',padding:'20px',width:'55%',minHeight:'100vh',display:'flex',flexDirection:'column'},children:userPosts.length===0?/*#__PURE__*/_jsx(Typography,{sx:{color:'white',mt:4,textAlign:'center'},children:\"You haven\\u2019t posted anything yet.\"}):userPosts.map(post=>/*#__PURE__*/_jsx(DevContent,{postId:post.post_id,title:post.post_title,content:post.post_content,username:post.author_username,currentUserId:post.post_author,postAuthorId:post.post_author,currentUserRole:\"user\",category:post.resource_tag_name,resource_name:post.resource_title,resource_version:post.resource_version,resource_color:post.resource_color||'#8b8b8b',postImage:post.post_image,commentCounter:post.post_comment,favouriteCounter:post.post_like_count,bookmarkCounter:post.post_bookmark_count,isLiked:post.is_liked,isBookmarked:post.is_bookmarked,onClick:()=>{},onPostDelete:id=>setUserPosts(prev=>prev.filter(p=>p.post_id!==id)),resource_tag:post.resource_tag_name,postDate:post.post_created_at},post.post_id))})})})]});}export default ProfilePage;","map":{"version":3,"names":["DevContent","Avatar","Box","Card","Typography","TopNavbar","useEffect","useState","jwtDecode","useParams","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ProfilePage","userId","username","setUsername","userPosts","setUserPosts","token","localStorage","getItem","fetch","headers","Authorization","then","res","json","data","posts","catch","err","console","error","decoded","children","sx","position","left","top","transform","display","flexDirection","alignItems","width","height","mb","color","fontWeight","fontSize","right","justifyContent","backgroundColor","padding","minHeight","length","mt","textAlign","map","post","postId","post_id","title","post_title","content","post_content","author_username","currentUserId","post_author","postAuthorId","currentUserRole","category","resource_tag_name","resource_name","resource_title","resource_version","resource_color","postImage","post_image","commentCounter","post_comment","favouriteCounter","post_like_count","bookmarkCounter","post_bookmark_count","isLiked","is_liked","isBookmarked","is_bookmarked","onClick","onPostDelete","id","prev","filter","p","resource_tag","postDate","post_created_at"],"sources":["C:/Users/AIRISZ/devcenter/frontend/src/pages/ProfilePage.js"],"sourcesContent":["import './App.css';\r\nimport DevContent from '../components/devContent';\r\nimport { Avatar, Box, Card, Typography } from '@mui/material';\r\nimport TopNavbar from '../components/topNavbar';\r\nimport { useEffect, useState } from 'react';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction ProfilePage() {\r\n  const { userId } = useParams(); // dynamic author ID\r\n  const [username, setUsername] = useState('');\r\n  const [userPosts, setUserPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (userId) {\r\n        // Visiting someone else's profile\r\n        fetch(`http://localhost:5000/get-user-posts/${userId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            setUsername(data.username || 'Unknown');\r\n            setUserPosts(data.posts || []);\r\n        })\r\n        .catch((err) => console.error('Failed to fetch profile:', err));\r\n    } else if (token) {\r\n        // Visiting your own profile\r\n        try {\r\n        const decoded = jwtDecode(token);\r\n        setUsername(decoded.username || 'User');\r\n        fetch(`http://localhost:5000/get-user-posts/${decoded.userId}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => setUserPosts(data.posts || []))\r\n            .catch((err) => console.error('Failed to fetch posts:', err));\r\n        } catch (error) {\r\n        console.error('Error decoding token:', error);\r\n        }\r\n    }\r\n    }, [userId]);\r\n\r\n      useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          try {\r\n            const decoded = jwtDecode(token);\r\n            setUsername(decoded.username || 'User');\r\n          } catch (error) {\r\n            console.error('Error decoding token:', error);\r\n          }\r\n        }\r\n      }, []);\r\n\r\n    return (\r\n        <>\r\n            <TopNavbar />\r\n            <Box\r\n                sx={{\r\n                    position: 'fixed',\r\n                    left: '50px',\r\n                    top: '45%',\r\n                    transform: 'translateY(-50%)',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                <Avatar sx={{ width: 80, height: 80, mb: 1 }}>N</Avatar> \r\n                <Typography\r\n                    sx={{\r\n                        color: 'white',\r\n                        fontWeight: 600,\r\n                        fontSize: 30,\r\n                    }}\r\n                >\r\n                    @{username}\r\n                </Typography>\r\n            </Box>\r\n            <Typography\r\n                sx={{\r\n                    position: 'fixed',\r\n                    right: '20px',\r\n                    top: '50%',\r\n                    transform: 'translateY(-50%)',\r\n                    color: 'white',\r\n                    fontWeight: 600,\r\n                    fontSize: 30,\r\n                }}\r\n            >\r\n                27 February 2025\r\n            </Typography>\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    width: '100%',\r\n                }}\r\n            >\r\n                <Box sx={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\r\n                    <Card\r\n                        sx={{\r\n                            backgroundColor: '#181818',\r\n                            padding: '20px',\r\n                            width: '55%',\r\n                            minHeight: '100vh',\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                        }}\r\n                    >\r\n            {userPosts.length === 0 ? (\r\n            <Typography sx={{ color: 'white', mt: 4, textAlign: 'center' }}>\r\n                You havenâ€™t posted anything yet.\r\n            </Typography>\r\n            ) : (\r\n            userPosts.map((post) => (\r\n            <DevContent\r\n                key={post.post_id}\r\n                postId={post.post_id}\r\n                title={post.post_title}\r\n                content={post.post_content}\r\n                username={post.author_username}\r\n                currentUserId={post.post_author}\r\n                postAuthorId={post.post_author}\r\n                currentUserRole={\"user\"}\r\n                category={post.resource_tag_name}\r\n                resource_name={post.resource_title}\r\n                resource_version={post.resource_version}\r\n                resource_color={post.resource_color || '#8b8b8b'}\r\n                postImage={post.post_image}\r\n                commentCounter={post.post_comment}\r\n                favouriteCounter={post.post_like_count}\r\n                bookmarkCounter={post.post_bookmark_count}\r\n                isLiked={post.is_liked}\r\n                isBookmarked={post.is_bookmarked}\r\n                onClick={() => {}}\r\n                onPostDelete={(id) =>\r\n                setUserPosts((prev) => prev.filter((p) => p.post_id !== id))\r\n                }\r\n                resource_tag={post.resource_tag_name}\r\n                postDate={post.post_created_at}\r\n            />\r\n            ))\r\n            )}\r\n                    </Card>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}