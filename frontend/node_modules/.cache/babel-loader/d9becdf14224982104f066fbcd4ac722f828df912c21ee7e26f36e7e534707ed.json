{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import{jwtDecode}from'jwt-decode';import{jsx as _jsx}from\"react/jsx-runtime\";export const UserContext=/*#__PURE__*/createContext();export const UserProvider=_ref=>{let{children}=_ref;const[username,setUsername]=useState('');const[token,setToken]=useState(null);const[userID,setUserID]=useState(null);const[role,setRole]=useState('');// ‚úÖ Add role\nuseEffect(()=>{const storedToken=localStorage.getItem('token');if(storedToken){setToken(storedToken);try{const decoded=jwtDecode(storedToken);if(decoded.userID)setUserID(decoded.userID);fetch('http://localhost:5000/get-profile-info',{headers:{Authorization:`Bearer ${storedToken}`}}).then(res=>res.json()).then(data=>{console.log(\"‚úÖ Profile Info Received:\",data);// üîç DEBUG\nif(data.username)setUsername(data.username);if(data.id)setUserID(data.id);if(data.role){console.log(\"‚úÖ Setting Role:\",data.role);// üîç DEBUG\nsetRole(data.role);}else{console.warn(\"‚ö†Ô∏è No role found in profile info\");}});}catch(err){console.error('Invalid token',err);}}},[]);return/*#__PURE__*/_jsx(UserContext.Provider,{value:{username,setUsername,token,setToken,userID,setUserID,role,setRole},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","jwtDecode","jsx","_jsx","UserContext","UserProvider","_ref","children","username","setUsername","token","setToken","userID","setUserID","role","setRole","storedToken","localStorage","getItem","decoded","fetch","headers","Authorization","then","res","json","data","console","log","id","warn","err","error","Provider","value"],"sources":["C:/Users/AIRISZ/devcenter/frontend/src/contexts/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [token, setToken] = useState(null);\r\n  const [userID, setUserID] = useState(null);\r\n  const [role, setRole] = useState(''); // ‚úÖ Add role\r\n\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem('token');\r\n    if (storedToken) {\r\n      setToken(storedToken);\r\n      try {\r\n        const decoded = jwtDecode(storedToken);\r\n        if (decoded.userID) setUserID(decoded.userID);\r\n\r\n        fetch('http://localhost:5000/get-profile-info', {\r\n          headers: {\r\n            Authorization: `Bearer ${storedToken}`,\r\n          },\r\n        })\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            console.log(\"‚úÖ Profile Info Received:\", data); // üîç DEBUG\r\n            if (data.username) setUsername(data.username);\r\n            if (data.id) setUserID(data.id);\r\n            if (data.role) {\r\n              console.log(\"‚úÖ Setting Role:\", data.role);  // üîç DEBUG\r\n              setRole(data.role);\r\n            } else {\r\n              console.warn(\"‚ö†Ô∏è No role found in profile info\");\r\n            }\r\n          });\r\n      } catch (err) {\r\n        console.error('Invalid token', err);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        username,\r\n        setUsername,\r\n        token,\r\n        setToken,\r\n        userID,\r\n        setUserID,\r\n        role,  \r\n        setRole\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACjE,OAASC,SAAS,KAAQ,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvC,MAAO,MAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,CAAC,CAE1C,MAAO,MAAM,CAAAO,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACa,MAAM,CAAEC,SAAS,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAC1C,KAAM,CAACe,IAAI,CAAEC,OAAO,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAE;AAEtCC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgB,WAAW,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACjD,GAAIF,WAAW,CAAE,CACfL,QAAQ,CAACK,WAAW,CAAC,CACrB,GAAI,CACF,KAAM,CAAAG,OAAO,CAAGlB,SAAS,CAACe,WAAW,CAAC,CACtC,GAAIG,OAAO,CAACP,MAAM,CAAEC,SAAS,CAACM,OAAO,CAACP,MAAM,CAAC,CAE7CQ,KAAK,CAAC,wCAAwC,CAAE,CAC9CC,OAAO,CAAE,CACPC,aAAa,CAAE,UAAUN,WAAW,EACtC,CACF,CAAC,CAAC,CACCO,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,EAAK,CACdC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAEF,IAAI,CAAC,CAAE;AAC/C,GAAIA,IAAI,CAAClB,QAAQ,CAAEC,WAAW,CAACiB,IAAI,CAAClB,QAAQ,CAAC,CAC7C,GAAIkB,IAAI,CAACG,EAAE,CAAEhB,SAAS,CAACa,IAAI,CAACG,EAAE,CAAC,CAC/B,GAAIH,IAAI,CAACZ,IAAI,CAAE,CACba,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEF,IAAI,CAACZ,IAAI,CAAC,CAAG;AAC5CC,OAAO,CAACW,IAAI,CAACZ,IAAI,CAAC,CACpB,CAAC,IAAM,CACLa,OAAO,CAACG,IAAI,CAAC,kCAAkC,CAAC,CAClD,CACF,CAAC,CAAC,CACN,CAAE,MAAOC,GAAG,CAAE,CACZJ,OAAO,CAACK,KAAK,CAAC,eAAe,CAAED,GAAG,CAAC,CACrC,CACF,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,mBACE5B,IAAA,CAACC,WAAW,CAAC6B,QAAQ,EACnBC,KAAK,CAAE,CACL1B,QAAQ,CACRC,WAAW,CACXC,KAAK,CACLC,QAAQ,CACRC,MAAM,CACNC,SAAS,CACTC,IAAI,CACJC,OACF,CAAE,CAAAR,QAAA,CAEDA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}